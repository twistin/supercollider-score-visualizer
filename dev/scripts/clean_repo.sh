#!/bin/bash

# =============================================================================
# üßπ LIMPIEZA AUTOM√ÅTICA DEL REPOSITORIO
# =============================================================================
# Este script limpia el repositorio dejando solo archivos esenciales

echo "üßπ Iniciando limpieza del repositorio..."

# Crear directorio temporal para archivos esenciales
mkdir -p temp_essential

# =============================================================================
# ARCHIVOS ESENCIALES A CONSERVAR
# =============================================================================

echo "üì¶ Respaldando archivos esenciales..."

# C√≥digo fuente del visualizador
cp -r src/ temp_essential/
cp Cargo.toml temp_essential/
cp config.toml temp_essential/

# Scripts SuperCollider esenciales (solo los mejores)
cp sc_auto_visualizer.scd temp_essential/
cp test_visualizer.scd temp_essential/
cp start_system.sh temp_essential/

# Documentaci√≥n esencial
cp README.md temp_essential/
cp README_QUICK.md temp_essential/
cp LICENSE temp_essential/

# Git
cp -r .git temp_essential/

echo "‚úÖ Archivos esenciales respaldados"

# =============================================================================
# ELIMINAR TODO LO DEM√ÅS
# =============================================================================

echo "üóëÔ∏è Eliminando archivos no esenciales..."

# Eliminar archivos de documentaci√≥n redundante
rm -f *.md 2>/dev/null || true
rm -f ARQUITECTURA_* SISTEMA_* SOLUCION_* INICIO_* RESUMEN_* 2>/dev/null || true

# Eliminar scripts SuperCollider redundantes
rm -f *.scd 2>/dev/null || true

# Eliminar scripts de inicio redundantes
rm -f start*.sh verify*.sh 2>/dev/null || true

# Eliminar carpetas no esenciales
rm -rf backup/ docs/ scripts/ supercollider/ tests/ target/ 2>/dev/null || true

# Eliminar archivos espec√≠ficos
rm -f .DS_Store fm.scd 2>/dev/null || true
rm -f *.py check_*.sh 2>/dev/null || true
rm -f audio_analyzer.rs lenguaje_visual_universal.rs live_coding_*.rs 2>/dev/null || true
rm -f main_old.rs main_refactored.rs musical_events.rs main.rs 2>/dev/null || true
rm -rf app/ audio/ config/ utils/ visual/ 2>/dev/null || true

echo "‚úÖ Archivos no esenciales eliminados"

# =============================================================================
# RESTAURAR ARCHIVOS ESENCIALES
# =============================================================================

echo "üìÅ Restaurando archivos esenciales..."

# Mover archivos esenciales de vuelta
mv temp_essential/* ./
mv temp_essential/.git ./

# Limpiar directorio temporal
rm -rf temp_essential

echo "‚úÖ Repositorio limpiado correctamente"

# =============================================================================
# CREAR ESTRUCTURA NUEVA
# =============================================================================

echo "üèóÔ∏è Creando nueva estructura..."

# Crear directorios necesarios
mkdir -p examples/
mkdir -p docs/

echo "‚úÖ Nueva estructura creada"

echo ""
echo "üéØ LIMPIEZA COMPLETADA"
echo "üìÅ Archivos conservados:"
echo "   ‚Ä¢ src/ (c√≥digo fuente Nannou)"
echo "   ‚Ä¢ Cargo.toml (configuraci√≥n Rust)"
echo "   ‚Ä¢ config.toml (configuraci√≥n visualizador)"
echo "   ‚Ä¢ sc_auto_visualizer.scd (SuperCollider auto-visualizaci√≥n)"
echo "   ‚Ä¢ test_visualizer.scd (test r√°pido)"
echo "   ‚Ä¢ start_system.sh (script de inicio)"
echo "   ‚Ä¢ README.md (documentaci√≥n completa)"
echo "   ‚Ä¢ README_QUICK.md (gu√≠a r√°pida)"
echo "   ‚Ä¢ LICENSE (licencia)"
echo ""
echo "üöÄ El repositorio est√° listo para live coding!"
